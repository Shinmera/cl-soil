;;; Generated by Verrazano 0.5 Then Heavily editted :)
;;----------------------------------------------------
;; Enums -
;;--------

(cl:in-package :cl-soil)

(pushnew (uiop:ensure-directory-pathname
          (asdf:system-relative-pathname :cl-soil "lib"))
         cffi:*foreign-library-directories*)

(cffi:define-foreign-library soil
  (:windows "SOIL.dll")
  (:darwin (:or "libSOIL.dylib"
                #+X86-64 "local_x64_libSOIL.dylib"))
  (:unix (:or "libSOIL.so"
              "libSOIL.so.1"
              #+X86-64 "local_x64_libSOIL.so"))
  (:windows (:or "out123.dll"
                 #+X86 "local_x86_libSOIL.dll"
                 #+X86-64 "local_x64_libSOIL.dll"))
  (t (:default "libSOIL.so")))

(cffi:use-foreign-library soil)

(cffi:defcenum ogl-texture-flags
  (:power-of-two 1)
  (:mipmaps 2)
  (:texture-repeats 4)
  (:multiply-alpha 8)
  (:invert-y 16)
  (:compress-to-dxt 32)
  (:dds-load-direct 64)
  (:ntsc-safe-rgb 128)
  (:co-cg-y 256)
  (:texture-rectangle 512))

(cffi:defcenum savable-image-types-enum
  (:tga 0)
  (:bmp 1)
  (:dds 2))

(cffi:defcenum image-format-enum
  (:auto 0)
  (:l 1)
  (:la 2)
  (:rgb 3)
  (:rgba 4))

(cffi:defcenum reuse-enum
  (:create-new-id 0))

(cffi:defcenum hdr-enum
  (:rgbe 0)
  (:rg-bdiv-a 1)
  (:rg-bdiv-a-2 2))

;;----------------------------------------------------

(cffi:defcfun ("SOIL_load_OGL_texture" soil-load-ogl-texture) :unsigned-int
  (filename :pointer)
  (force-channels image-format-enum)
  (reuse-texture-id reuse-enum)
  (flags ogl-texture-flags))

(cffi:defcfun ("SOIL_load_OGL_texture_from_memory"
               soil-load-ogl-texture-from-memory) :unsigned-int
  (buffer :pointer)
  (buffer-length :int)
  (force-channels image-format-enum)
  (reuse-texture-id reuse-enum)
  (flags ogl-texture-flags))

(cffi:defcfun ("SOIL_create_OGL_texture" soil-create-ogl-texture)
    :unsigned-int
  (data :pointer)
  (width :int)
  (height :int)
  (channels :int)
  (reuse-texture-id reuse-enum)
  (flags :unsigned-int))

(cffi:defcfun ("SOIL_load_OGL_single_cubemap_from_memory"
               soil-load-ogl-single-cubemap-from-memory) :unsigned-int
  (buffer :pointer)
  (buffer-length :int)
  (face-order :pointer)
  (force-channels image-format-enum)
  (reuse-texture-id reuse-enum)
  (flags :unsigned-int))

(cffi:defcfun ("SOIL_save_screenshot" soil-save-screenshot) :int
  (filename :pointer)
  (image-type savable-image-types-enum)
  (x :int)
  (y :int)
  (width :int)
  (height :int))

(cffi:defcfun ("SOIL_create_OGL_single_cubemap" soil-create-ogl-single-cubemap)
    :unsigned-int
  (data :pointer)
  (width :int)
  (height :int)
  (channels :int)
  (face-order :pointer)
  (reuse-texture-id reuse-enum)
  (flags :unsigned-int))

(cffi:defcfun ("SOIL_load_OGL_single_cubemap"
               soil-load-ogl-single-cubemap) :unsigned-int
  (filename :pointer)
  (face-order :pointer)
  (force-channels image-format-enum)
  (reuse-texture-id reuse-enum)
  (flags :unsigned-int))

(cffi:defcfun ("SOIL_last_result" soil-last-result) :pointer)

(cffi:defcfun ("SOIL_free_image_data" soil-free-image-data) :void
  (img-data :pointer))

(cffi:defcfun ("SOIL_load_image_from_memory"
               soil-load-image-from-memory) (:pointer :unsigned-char)
  (buffer :pointer)
  (buffer-length :int)
  (width (:pointer :int))
  (height (:pointer :int))
  (channels (:pointer :int))
  (force-channels image-format-enum))

(cffi:defcfun ("SOIL_load_OGL_cubemap_from_memory"
               soil-load-ogl-cubemap-from-memory) :unsigned-int
  (x-pos-buffer :pointer)
  (x-pos-buffer-length :int)
  (x-neg-buffer :pointer)
  (x-neg-buffer-length :int)
  (y-pos-buffer :pointer)
  (y-pos-buffer-length :int)
  (y-neg-buffer :pointer)
  (y-neg-buffer-length :int)
  (z-pos-buffer :pointer)
  (z-pos-buffer-length :int)
  (z-neg-buffer :pointer)
  (z-neg-buffer-length :int)
  (force-channels image-format-enum)
  (reuse-texture-id reuse-enum)
  (flags :unsigned-int))

(cffi:defcfun ("SOIL_load_image" soil-load-image) (:pointer :unsigned-char)
  (filename :pointer)
  (width (:pointer :int))
  (height (:pointer :int))
  (channels (:pointer :int))
  (force-channels image-format-enum))

(cffi:defcfun ("SOIL_save_image" soil-save-image) :int (filename :pointer)
              (image-type savable-image-types-enum)
              (width :int)
              (height :int)
              (channels :int)
              (data :pointer))

(cffi:defcfun ("SOIL_load_OGL_HDR_texture"
               soil-load-ogl-hdr-texture) :unsigned-int
  (filename :pointer)
  (fake-hdr-format hdr-enum)
  (rescale-to-max :int)
  (reuse-texture-id reuse-enum)
  (flags :unsigned-int))

(cffi:defcfun ("SOIL_load_OGL_cubemap" soil-load-ogl-cubemap) :unsigned-int
  (x-pos-file :pointer)
  (x-neg-file :pointer)
  (y-pos-file :pointer)
  (y-neg-file :pointer)
  (z-pos-file :pointer)
  (z-neg-file :pointer)
  (force-channels image-format-enum)
  (reuse-texture-id reuse-enum)
  (flags :unsigned-int))
